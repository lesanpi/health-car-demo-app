import 'package:flutter/material.dart';
import 'package:flutter/widgets.dart';
import 'package:gap/gap.dart';
import 'package:health_car_demo_app/app/constant.dart';
import 'package:health_car_demo_app/src/presentation/home/bloc/bloc.dart';
import 'package:health_car_demo_app/src/presentation/vehicles/vehicles.dart';
import 'package:newton_particles/newton_particles.dart';

/// {@template home_body}
/// Body of the HomePage.
///
/// Add what it does
/// {@endtemplate}
class HomeBody extends StatelessWidget {
  /// {@macro home_body}
  const HomeBody({super.key});

  @override
  Widget build(BuildContext context) {
    return SafeArea(
      child: Newton(
        activeEffects: [
          RainEffect(
            particleConfiguration: ParticleConfiguration(
              shape: CircleShape(),
              size: const Size(5, 5),
              color: SingleParticleColor(
                color: Colors.white.withOpacity(0.05),
              ),
            ),
            effectConfiguration: const EffectConfiguration(
              maxDuration: 10000,
            ),
          ),
        ],
        child: Column(
          crossAxisAlignment: CrossAxisAlignment.start,
          children: [
            Expanded(
              child: PageView(
                children: const [
                  WelcomeView(),
                  PermissionRequestView(),
                  VehiclesPage(),
                ],
              ),
            ),
          ],
        ),
      ),
    );
  }
}

class WelcomeView extends StatelessWidget {
  const WelcomeView({
    super.key,
  });

  @override
  Widget build(BuildContext context) {
    return SingleChildScrollView(
      padding: const EdgeInsets.symmetric(horizontal: Consts.margin),
      child: Column(
        crossAxisAlignment: CrossAxisAlignment.start,
        children: [
          Text(
            'üöô',
            style: Theme.of(context).textTheme.titleLarge?.copyWith(
                  fontSize: 30,
                ),
          ),
          Text(
            '¬°Bienvenido!',
            style: Theme.of(context).textTheme.titleLarge?.copyWith(
                  fontSize: 30,
                ),
          ),
          const Text(
            '¬°Toma el control de tu veh√≠culo!',
            style: TextStyle(fontSize: 24),
          ),
          const Text(
            'Con esta app podr√°s monitorear en tiempo real el estado de salud de tu veh√≠culo, previniendo aver√≠as y optimizando su rendimiento.',
            style: TextStyle(fontSize: 18),
          ),
          const Gap(Consts.margin * 2),
          Text(
            '‚ö†Ô∏è',
            style: Theme.of(context).textTheme.titleLarge?.copyWith(
                  fontSize: 20,
                ),
          ),
          const Text(
            'Importante:',
            style: TextStyle(fontSize: 18, fontWeight: FontWeight.bold),
          ),
          const Text(
            '''
* Esta app se encuentra en fase de prueba y solo est√° disponible para monitorear un veh√≠culo de prueba espec√≠fico.''',
            style: TextStyle(fontSize: 16),
          ),
          const Text(
            '''
* La informaci√≥n que visualizas en esta app proviene directamente de un veh√≠culo de prueba y se actualiza constantemente. Sin embargo, es importante tener en cuenta que los datos se encuentran en fase de prueba y podr√≠an presentar un margen de error.''',
            style: TextStyle(fontSize: 16),
          ),
          const Text(
            '''
* La app no est√° destinada a ser utilizada como un reemplazo para el diagn√≥stico o reparaci√≥n profesional de veh√≠culos.''',
            style: TextStyle(fontSize: 16),
          ),
        ],
      ),
    );
  }
}

class PermissionRequestView extends StatelessWidget {
  const PermissionRequestView({super.key});

  @override
  Widget build(BuildContext context) {
    return SingleChildScrollView(
      padding: const EdgeInsets.symmetric(horizontal: Consts.margin),
      child: Column(
        crossAxisAlignment: CrossAxisAlignment.start,
        children: [
          Text(
            '‚ö†Ô∏è',
            style: Theme.of(context).textTheme.titleLarge?.copyWith(
                  fontSize: 30,
                ),
          ),
          Text(
            'Necesitamos algunos permisos',
            style: Theme.of(context).textTheme.titleLarge?.copyWith(
                  fontSize: 30,
                ),
          ),
          const Text(
            'Para brindarte la mejor experiencia, necesitamos algunos permisos:',
            style: TextStyle(fontSize: 16),
          ),
          const ListTile(
            leading: Icon(Icons.notifications),
            title: Text('Notificaciones'),
            subtitle: Text(
              'Te enviaremos notificaciones importantes sobre el estado de tu veh√≠culo.',
            ),
          ),
          const ListTile(
            leading: Icon(Icons.location_pin),
            title: Text('Ubicaci√≥n en segundo plano'),
            subtitle: Text(
              'Te permitir√° recibir notificaciones incluso cuando la app no est√© en uso.',
            ),
          ),
          const ListTile(
            leading: Icon(Icons.bluetooth),
            title: Text('Bluetooth'),
            subtitle: Text(
              'Te permitir√° comunicarte con los dispositivos IoT',
            ),
          ),
          const Text(
            'Tambi√©n te pedimos que actives la opci√≥n "Permitir actividad en segundo plano" para que la app pueda funcionar sin interrupciones, incluso con baja bater√≠a.',
            style: TextStyle(fontSize: 16),
          ),
          const Gap(Consts.margin),
          ElevatedButton(
            // Implementar la l√≥gica para abrir la configuraci√≥n de permisos
            // y solicitar la opci√≥n "Permitir actividad en segundo plano"
            onPressed: () async {
              context
                  .read<BackgroundProcessBloc>()
                  .add(const RequestPermissionPressed());
            },
            child: const Center(child: Text('Activar permisos')),
          ),
        ],
      ),
    );
  }
}
